{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample CRUD api.",
        "title": "CRUD API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080/",
    "paths": {
        "/api/orders/create": {
            "post": {
                "description": "create new order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CREATE"
                ],
                "summary": "Create order",
                "parameters": [
                    {
                        "description": "Order",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/repository.Order"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "create new order",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/orders/{id}": {
            "get": {
                "description": "get order by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GET order"
                ],
                "summary": "get order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get order\" repository.Order",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "mark order as deleted",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UPDATE order"
                ],
                "summary": "delete order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "order will be deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/pets/create": {
            "post": {
                "description": "create new pet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CREATE"
                ],
                "summary": "Create pet",
                "parameters": [
                    {
                        "description": "Pet",
                        "name": "pet",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/repository.Pet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "create new pet",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/pets/status": {
            "get": {
                "description": "find pets by status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SEARCH pet"
                ],
                "summary": "Find pets by status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "status",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get pets by status\" repository.Pet",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/pets/update": {
            "put": {
                "description": "update pet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GET pet"
                ],
                "summary": "update pet",
                "parameters": [
                    {
                        "description": "Pet",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/repository.Pet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pet updated",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/pets/{id}": {
            "get": {
                "description": "get pet by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GET pet"
                ],
                "summary": "get pet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get pet\" repository.Pet",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "mark pet as deleted",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UPDATE pet"
                ],
                "summary": "delete pet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "pet will be deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/users/create": {
            "post": {
                "description": "create new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CREATE"
                ],
                "summary": "Create user",
                "parameters": [
                    {
                        "description": "user",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/repository.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "create new user",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/users/update": {
            "put": {
                "description": "update user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GET user"
                ],
                "summary": "update user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/users/{id}": {
            "get": {
                "description": "get user by username",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GET user"
                ],
                "summary": "get user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get user\" repository.User",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "mark user as deleted",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UPDATE user"
                ],
                "summary": "delete user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user will be deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "repository.Order": {
            "type": "object"
        },
        "repository.Pet": {
            "type": "object"
        },
        "repository.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lastname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "userstatus": {
                    "type": "integer"
                }
            }
        }
    }
}